|blk
reset => pwm:inst.clr
reset => VHDL_BE:inst3.reset
clk => VHDL_BE:inst3.CLOCK_50
d[0] => pwm:inst.d[0]
d[1] => pwm:inst.d[1]
d[2] => pwm:inst.d[2]
d[3] => pwm:inst.d[3]
d[4] => pwm:inst.d[4]
d[5] => pwm:inst.d[5]
d[6] => pwm:inst.d[6]
d[7] => pwm:inst.d[7]


|blk|pwm:inst
clr => cnt16:counter.clr
clr => rs:rsc.clr
clk => cnt16:counter.clk
clk => rs:rsc.clk
d[0] => cmp:cmplimit.b[0]
d[1] => cmp:cmplimit.b[1]
d[2] => cmp:cmplimit.b[2]
d[3] => cmp:cmplimit.b[3]
d[4] => cmp:cmplimit.b[4]
d[5] => cmp:cmplimit.b[5]
d[6] => cmp:cmplimit.b[6]
d[7] => cmp:cmplimit.b[7]


|blk|pwm:inst|cnt16:counter
clr => internal[0].ACLR
clr => internal[1].ACLR
clr => internal[2].ACLR
clr => internal[3].ACLR
clr => internal[4].ACLR
clr => internal[5].ACLR
clr => internal[6].ACLR
clr => internal[7].ACLR
clk => internal[0].CLK
clk => internal[1].CLK
clk => internal[2].CLK
clk => internal[3].CLK
clk => internal[4].CLK
clk => internal[5].CLK
clk => internal[6].CLK
clk => internal[7].CLK


|blk|pwm:inst|cmp:cmpzero
a[0] => Equal0.IN7
a[1] => Equal0.IN6
a[2] => Equal0.IN5
a[3] => Equal0.IN4
a[4] => Equal0.IN3
a[5] => Equal0.IN2
a[6] => Equal0.IN1
a[7] => Equal0.IN0
b[0] => Equal0.IN15
b[1] => Equal0.IN14
b[2] => Equal0.IN13
b[3] => Equal0.IN12
b[4] => Equal0.IN11
b[5] => Equal0.IN10
b[6] => Equal0.IN9
b[7] => Equal0.IN8


|blk|pwm:inst|cmp:cmplimit
a[0] => Equal0.IN7
a[1] => Equal0.IN6
a[2] => Equal0.IN5
a[3] => Equal0.IN4
a[4] => Equal0.IN3
a[5] => Equal0.IN2
a[6] => Equal0.IN1
a[7] => Equal0.IN0
b[0] => Equal0.IN15
b[1] => Equal0.IN14
b[2] => Equal0.IN13
b[3] => Equal0.IN12
b[4] => Equal0.IN11
b[5] => Equal0.IN10
b[6] => Equal0.IN9
b[7] => Equal0.IN8


|blk|pwm:inst|rs:rsc
clr => q~reg0.ACLR
clk => q~reg0.CLK
s => q.OUTPUTSELECT
r => q.OUTPUTSELECT


|blk|VHDL_BE:inst3
CLOCK_50 => diviseur[0].CLK
CLOCK_50 => diviseur[1].CLK
CLOCK_50 => diviseur[2].CLK
CLOCK_50 => diviseur[3].CLK
CLOCK_50 => diviseur[4].CLK
CLOCK_50 => diviseur[5].CLK
CLOCK_50 => diviseur[6].CLK
CLOCK_50 => diviseur[7].CLK
CLOCK_50 => switch.CLK
reset => diviseur[0].ACLR
reset => diviseur[1].ACLR
reset => diviseur[2].ACLR
reset => diviseur[3].ACLR
reset => diviseur[4].ACLR
reset => diviseur[5].ACLR
reset => diviseur[6].ACLR
reset => diviseur[7].ACLR
reset => switch.ACLR


